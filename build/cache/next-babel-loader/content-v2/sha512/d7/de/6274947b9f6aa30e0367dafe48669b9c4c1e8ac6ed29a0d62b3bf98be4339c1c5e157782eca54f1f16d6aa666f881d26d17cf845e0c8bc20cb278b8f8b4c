{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alfin/code/kalkulator-saham-web/src/pages/_app.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"theme\";\nimport GlobalStyles from \"global-styles\";\nimport { useRouter } from \"next/router\";\nimport Loading from \"components/loading\";\nexport default function MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  const router = useRouter();\n  const [loading, setLoading] = React.useState(false);\n  React.useEffect(() => {\n    const handleStart = url => url !== router.asPath && setLoading(true);\n\n    const handleComplete = url => url === router.asPath && setLoading(false);\n\n    router.events.on(\"routeChangeStart\", handleStart);\n    router.events.on(\"routeChangeComplete\", handleComplete);\n    router.events.on(\"routeChangeError\", handleComplete);\n    return () => {\n      router.events.off(\"routeChangeStart\", handleStart);\n      router.events.off(\"routeChangeComplete\", handleComplete);\n      router.events.off(\"routeChangeError\", handleComplete);\n    };\n  });\n  return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/alfin/code/kalkulator-saham-web/src/pages/_app.jsx"],"names":["React","PropTypes","ThemeProvider","CssBaseline","theme","GlobalStyles","useRouter","Loading","MyApp","props","Component","pageProps","useEffect","jssStyles","document","querySelector","parentElement","removeChild","router","loading","setLoading","useState","handleStart","url","asPath","handleComplete","events","on","off","propTypes","elementType","isRequired","object"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AAEAT,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;AACF,GAND,EAMG,EANH;AAQA,QAAMK,MAAM,GAAGZ,SAAS,EAAxB;AAEA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBpB,KAAK,CAACqB,QAAN,CAAe,KAAf,CAA9B;AAEArB,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpB,UAAMU,WAAW,GAAIC,GAAD,IAASA,GAAG,KAAKL,MAAM,CAACM,MAAf,IAAyBJ,UAAU,CAAC,IAAD,CAAhE;;AACA,UAAMK,cAAc,GAAIF,GAAD,IAASA,GAAG,KAAKL,MAAM,CAACM,MAAf,IAAyBJ,UAAU,CAAC,KAAD,CAAnE;;AAEAF,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCL,WAArC;AACAJ,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwCF,cAAxC;AACAP,IAAAA,MAAM,CAACQ,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqCF,cAArC;AAEA,WAAO,MAAM;AACXP,MAAAA,MAAM,CAACQ,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCN,WAAtC;AACAJ,MAAAA,MAAM,CAACQ,MAAP,CAAcE,GAAd,CAAkB,qBAAlB,EAAyCH,cAAzC;AACAP,MAAAA,MAAM,CAACQ,MAAP,CAAcE,GAAd,CAAkB,kBAAlB,EAAsCH,cAAtC;AACD,KAJD;AAKD,GAbD;AAeA,SAAON,OAAO,gBACZ,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEf,KAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD,oBAAeO,SAAf;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBAHF;AAWD;AAEDH,KAAK,CAACqB,SAAN,GAAkB;AAChBnB,EAAAA,SAAS,EAAET,SAAS,CAAC6B,WAAV,CAAsBC,UADjB;AAEhBpB,EAAAA,SAAS,EAAEV,SAAS,CAAC+B,MAAV,CAAiBD;AAFZ,CAAlB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"theme\";\nimport GlobalStyles from \"global-styles\";\nimport { useRouter } from \"next/router\";\nimport Loading from \"components/loading\";\n\nexport default function MyApp(props) {\n  const { Component, pageProps } = props;\n\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n\n  const router = useRouter();\n\n  const [loading, setLoading] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleStart = (url) => url !== router.asPath && setLoading(true);\n    const handleComplete = (url) => url === router.asPath && setLoading(false);\n\n    router.events.on(\"routeChangeStart\", handleStart);\n    router.events.on(\"routeChangeComplete\", handleComplete);\n    router.events.on(\"routeChangeError\", handleComplete);\n\n    return () => {\n      router.events.off(\"routeChangeStart\", handleStart);\n      router.events.off(\"routeChangeComplete\", handleComplete);\n      router.events.off(\"routeChangeError\", handleComplete);\n    };\n  });\n\n  return loading ? (\n    <Loading />\n  ) : (\n    <>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <GlobalStyles />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}